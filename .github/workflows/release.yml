# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ releases/** ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.1
        with:
          ref: main

      - uses: actions/checkout@v2.3.1

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
          java-version: 11

      - name: Get fix number
        id: release
        shell: bash
        run: |
          releaseBranch=$(git rev-parse --abbrev-ref HEAD | sed 's/.*\-\(.*\)/\1/')
          commits=$(git rev-list --count refs/remotes/origin/$releaseBranch..HEAD)
          echo "FIX_NUMBER=$commits" >> $GITHUB_ENV
          echo "::set-output name=release_branch::$releaseBranch"

      - name: Get current library version
        id: manager
        shell: bash
        run: |
          IFS='/' read -ra strarr <<< "${GITHUB_REF#refs/heads/}"
          version="${strarr[1]}".$FIX_NUMBER
          echo "VERSION_NAME=$version" >> $GITHUB_ENV
          echo "::set-output name=version_name::$version"

      - name: Set library version to deploy
        shell: bash
        run: sed -i -e 's/pom.version=[0-9]*.[0-9]*.[0-9]*/pom.version='${VERSION_NAME}'/g' ./navigation/gradle.properties

      - name: Generate GPG Key file
        shell: bash
        env:
          CONTENT: ${{ secrets.SIGNING_SECRET_KEY_RING_CONTENT }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          printf "$CONTENT" | base64 --decode > ./navigation/private.key
          gpg --batch --import ./navigation/private.key
          echo "signing.keyId=$SIGNING_KEY_ID" >> ./navigation/local.properties
          echo "signing.password=$SIGNING_PASSWORD" >> ./navigation/local.properties
          echo "signing.secretKeyRingFile=./private.key" >> ./navigation/local.properties

      - name: Gradle Command
        uses: eskatos/gradle-command-action@v2.1.0
        env:
          PUBLISH_USERNAME: ${{secrets.MAVEN_CENTRAL_USER}}
          PUBLISH_PASSWORD: ${{secrets.MAVEN_CENTRAL_TOKEN}}
        with:
          arguments: "-Dorg.gradle.internal.http.socketTimeout=300000 -Dorg.gradle.internal.http.connectionTimeout=300000 navigation:publish"

      - name: Create a Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.manager.outputs.version_name }}
          release_name: ${{ steps.manager.outputs.version_name }}

      - name: Tag release
        shell: bash
        env:
          VERSION: ${{ steps.release.outputs.release_branch }}
        run: |
          git tag $VERSION
          git push origin $VERSION

      - name: Remove GPG file
        shell: bash
        run: |
          rm -f ./navigation/signature.gpg
          rm -f ./navigation/local.properties
